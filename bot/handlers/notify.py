import sqlite3
from telegram import Update
from telegram.ext import ContextTypes
from bot.database import DB_PATH

ADMIN_IDS = [854059535]  #  Telegram ID –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤

async def notify(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id not in ADMIN_IDS:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return

    if not context.args:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /notify –í–ê–ñ–ù–û–ï_–°–û–û–ë–©–ï–ù–ò–ï")
        return

    message = "üîî –í–ê–ñ–ù–û:\n" + " ".join(context.args)

    conn = sqlite3.connect(DB_PATH)
    cur = conn.cursor()
    cur.execute("SELECT DISTINCT user_id FROM registrations")
    users = cur.fetchall()
    conn.close()

    count = 0
    for (user_id,) in users:
        try:
            await context.bot.send_message(chat_id=user_id, text=message)
            count += 1
        except Exception:
            pass  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞

    await update.message.reply_text(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {count} —É—á–∞—Å—Ç–Ω–∏–∫–∞–º.")
