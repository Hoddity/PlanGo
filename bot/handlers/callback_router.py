from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import sqlite3
from bot.database import DB_PATH

from bot.handlers.handle_callback import handle_callback  # —Ä–µ–≥/–æ—Ç–º–µ–Ω–∞

async def callback_router(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    data = query.data
    user_id = query.from_user.id

    if data == "list":
        conn = sqlite3.connect(DB_PATH)
        cur = conn.cursor()
        cur.execute("SELECT id, title, time FROM masterclasses")
        rows = cur.fetchall()
        conn.close()

        if not rows:
            await query.edit_message_text("–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–æ–≤.")
            return

        text = "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã:\n\n"
        keyboard = []

        for row in rows:
            masterclass_id, title, time = row
            text += f"ID: {masterclass_id}\n–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n–í—Ä–µ–º—è: {time}\n\n"
            keyboard.append([
                InlineKeyboardButton("‚úÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data=f"register:{masterclass_id}"),
                InlineKeyboardButton("‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è", callback_data=f"unregister:{masterclass_id}")
            ])

        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(text, reply_markup=reply_markup)

    elif data == "my":
        conn = sqlite3.connect(DB_PATH)
        cur = conn.cursor()
        cur.execute("""
            SELECT m.title, m.time, m.location, r.status
            FROM registrations r
            JOIN masterclasses m ON r.masterclass_id = m.id
            WHERE r.user_id=?
            ORDER BY m.time
        """, (user_id,))
        rows = cur.fetchall()
        conn.close()

        if not rows:
            await query.edit_message_text("–í—ã –Ω–µ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∏ –Ω–∞ –æ–¥–∏–Ω –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å.")
            return

        text = "üë§ –í–∞—à–∏ –∑–∞–ø–∏—Å–∏:\n\n"
        for r in rows:
            title, time, location, status = r
            text += f"–ù–∞–∑–≤–∞–Ω–∏–µ: {title}\n–í—Ä–µ–º—è: {time}\n–ú–µ—Å—Ç–æ: {location}\n–°—Ç–∞—Ç—É—Å: {status}\n\n"

        await query.edit_message_text(text)

    elif ":" in data:
        # –¥–µ–ª–µ–≥–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–µ–≥/–æ—Ç–º–µ–Ω—ã
        await handle_callback(update, context)
